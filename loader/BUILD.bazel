load(
    "//ign_bazel:generate_include_header.bzl",
    "generate_include_header",
)

load(
    "//ign_bazel:ign_export_header.bzl",
    "ign_export_header",
)

public_headers_no_gen = [
    "include/ignition/plugin/Loader.hh",
    "include/ignition/plugin/detail/Loader.hh",
]

sources = [
    "src/Loader.cc"
]

test_sources = [
    "src/Loader_TEST.cc"
]

ign_export_header(
    name = "include/ignition/plugin/loader/Export.hh",
    lib_name = "ignition-plugin",
    export_base = "IGNITION_PLUGIN_LOADER",
    visibility = ["//visibility:private"],
)

generate_include_header(
    name = "loader_hh_genrule",
    out = "include/ignition/plugin/loader.hh",
    hdrs = public_headers_no_gen + [
        "include/ignition/plugin/loader/Export.hh",
    ],
)

public_headers = public_headers_no_gen + [
    "include/ignition/plugin/loader/Export.hh",
    "include/ignition/plugin/loader.hh",
]

cc_binary(
    name = "libignition-plugin2-loader.so",
    srcs = sources + public_headers,
    includes = ["include"],
    linkopts = ["-Wl,-soname,libignition-plugin2-loader.so", "-ldl"],
    linkshared = True,
    visibility = [],
    deps = [
        "//ign_plugin/core:ign_plugin",
        "//ign_bazel:utilities",
    ],
)

cc_library(
    name = "loader",
    srcs = ["libignition-plugin2-loader.so"],
    hdrs = public_headers,
    includes = ["include"],
    visibility = ["//visibility:public"],
    linkopts = ["-ldl"],
    deps = [
        "//ign_plugin/core:ign_plugin",
        "//ign_bazel:utilities",
    ],
)

[cc_test(
    name = src.replace("/", "_").replace(".cc", "").replace("src_", ""),
    srcs = [src],
    deps = [
        "//ign_bazel:utilities",
        "//ign_common",
        "//ign_plugin/loader",
        "//ign_plugin/core:ign_plugin",
        "//ign_plugin/test:IGNDummyPlugins.so",
        "@gtest//:gtest",
        "@gtest//:gtest_main",
    ],
) for src in test_sources]
