load(
    "//ign_bazel:build_defs.bzl",
    "IGNITION_ROOT",
    "IGNITION_VISIBILITY",
    "generate_include_header",
    "ign_export_header",
)

package(
    default_visibility = IGNITION_VISIBILITY,
)

plugin_sources = [
    "plugins/BadPluginAlign.cc",
    "plugins/BadPluginAPIVersionNew.cc",
    "plugins/BadPluginAPIVersionOld.cc",
    "plugins/BadPluginNoInfo.cc",
    "plugins/BadPluginSize.cc",
    "plugins/FactoryPlugins.cc",
    "plugins/TemplatedPlugins.cc",
]

headers = [
    "plugins/DummyPlugins.hh",
    "plugins/DummyMultiPlugin.hh",
    "plugins/FactoryPlugins.hh",
    "plugins/GenericExport.hh",
    "plugins/TemplatedPlugins.hh",
]

[
    cc_binary(
        name = "IGN" + plugin.split("/")[1].replace(".cc", "") + ".so",
        srcs = [plugin] + headers,
        includes = ["plugins"],
        linkshared = True,
        deps = [
            IGNITION_ROOT + "ign_plugin/register",
        ],
    )
    for plugin in plugin_sources
]

cc_binary(
    name = "IGNDummyPlugins.so",
    srcs = [
        "plugins/DummyMultiPlugin.hh",
        "plugins/DummyPlugins.cc",
        "plugins/DummyPlugins.hh",
        "plugins/DummyPluginsOtherTranslationUnit.cc",
    ],
    includes = ["plugins"],
    linkshared = True,
    deps = [
        IGNITION_ROOT + "ign_plugin/register",
    ],
)

[
    cc_test(
        name = "INTEGRATION_" + test.split("/")[1].replace(".cc", ""),
        srcs = [
            test,
            "integration/utils.hh",
        ] + headers,
        data = [
            ":IGNDummyPlugins.so",
            ":IGNFactoryPlugins.so",
            ":IGNTemplatedPlugins.so",
        ],
        includes = [
            ".",
            "integration",
            "plugins",
        ],
        deps = [
            IGNITION_ROOT + "ign_common",
            IGNITION_ROOT + "ign_plugin/loader",
            "@gtest",
            "@gtest//:gtest_main",
        ],
    )
    for test in glob(["integration/*.cc"])
]
